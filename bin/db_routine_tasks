#! /usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/bubble_ruby/db_schema_builder'
require_relative '../lib/bubble_ruby/schema_refiner'
require 'bubble_ruby/exporter_service'
require 'bubble_ruby/bubble_api_service'
require 'bubble_ruby/postgre_populator'
require 'bubble_ruby/single_association_populator'
require 'bubble_ruby/table_single_associator'
require 'byebug'

db_schema_builder = BubbleRuby::DbSchemaBuilder.new

puts 'Fetching the latest schema from swagger...'

schema = db_schema_builder.call

puts 'Updating the PostgreSQL db schema'

# schema = eval(File.open('schema.rb').read)
table_names = schema.map { |table| table[:name] }

schema_refiner = BubbleRuby::SchemaRefiner.new(schema)

schema_refiner.call

puts 'Populating with the latest records from Bubble'

bubble_api_service = BubbleRuby::BubbleApiService.new
populator = BubbleRuby::PostgrePopulator.new(bubble_api_service)
single_association_populator = BubbleRuby::SingleAssociationPopulator.new
table_single_associator = BubbleRuby::TableSingleAssociator.new(table_names)

table_names.each do |table_name|
  next if ['oldnotifications', 'notifications2.0', 'visualisations', 'oldcertificates'].include?(table_name)

  puts "Starting with #{table_name}..."
  populator.call(table_name)
  table_single_associator.call(table_name)
end

puts 'Latest data imported and relationships created, but not yet populated'

puts 'Connecting relationships...'

table_names.each { |table_name| single_association_populator.call(table_name) }

puts 'All done! âœ…'
